#!/usr/bin/expect
# SPDX-License-Identifier: GPL-2.0
#====================================
#
# Renesas ROM Writer lib
#
#====================================
expect_after {
    timeout {
	puts "Timeout. Please retry.\r"
	exit 1
    }
}

proc ctrl_c {until} {
    set timeout 1
    set i 0

    #
    # some case, you need "sleep" before ctrl_c
    #
    while {$i < 10} {
	send "\003"
	expect {
	    $until {
		set timeout 10
		return
	    }
	    timeout {}
	}
	incr i
    }

    puts "Auto Run couldn't stop"
    exit 1
}

proc ask_yes_no {msg} {
    puts "$msg (y/n) ?"
    set ans [gets stdin]
    if {$ans != "y"} {
	exit 0
    }
}

proc power_check {onoff} {
    puts "********************"
    puts "Board Power ${onoff}"
    puts "********************"
    ask_yes_no "OK ?"
}

proc sw_change_mode {update} {
    puts "********************"
    puts "Change the Mode"
    ${update}
    puts "********************"
    ask_yes_no "Are you ready ?"
}

proc sw_change_back {back} {
    puts "********************"
    puts "Change back the Mode"
    ${back}
    puts "********************"
    ask_yes_no "Are you ready ?"
}

proc upload_file {file} {
    global tty

    #
    # send srec as ascii
    #
    exec cat $file > $tty
    send "\n"
}

proc speed_up {} {
    global tty

    set baudrate "115200"

    send "\r"
    expect {
	">" { send "sup\r" }
    }
    expect {
	"460.8Kbps" { set baudrate "460800" }
	"921.6Kbps" { set baudrate "921600" }
    }

    # close current minicom and re-open minicom
    close; wait
    spawn env LANG=C minicom -D $tty -b $baudrate

    expect {
	"Press CTRL-A Z for help on special keys" { send "\r" }
    }
    expect {
	">"
    }
}

proc file_check {lists} {
    set err 0

    #
    # it expects lists are
    #
    #	top,save,file
    #	top,save,file
    #	top,save,file
    #	...
    #
    foreach list $lists {
	set data [split $list ","]
	if {[llength $data] != 3} {
	    return
	}

	#
	# It assumes files are
	# located at pwd
	#
	set pwd  [format "%s" [pwd] ]
	set file [lindex $data 2]

	if { [ file exists "${pwd}/${file}" ] != 1 } {
	    puts "file not found at pwd: ${pwd}/${file}"
	    set err 1
	}
    }

    if {$err != 0} {
	exit 0
    }
}

proc run_main {lists} {
    # Some board needs much time to write data
    # Let's set enough long timeout
    set timeout 600

    #
    # it expects lists are
    #
    #	addr,save,file
    #	addr,save,file
    #	addr,save,file
    #	...
    #
    foreach list $lists {

	#
	# list is
	#	addr,save,file
	#
	set data [split $list ","]
	if {[llength $data] != 3} {
	    return
	}
	set addr [lindex $data 0]
	set save [lindex $data 1]
	set file [lindex $data 2]

	send "\r"

	expect {
	    ">" { send "xls2\r" }
	}
	expect {
	    "Select \(1-3\)>" { send "3\r" }
	}
	expect {
	    "(Push Y key)"    { send "Y" }
	}
	expect {
	    "(Push Y key)"    { send "Y" }
	}
	expect {
	    "Please Input : H'"    { send "$addr\r" }
	}
	expect {
	    "Please Input : H'"    { send "$save\r" }
	}
	expect {
	    "please send !"
	}

	upload_file $file

	expect {
	    "Clear OK?(y/n)" { send "y" }
	}
	expect {
	    ">"
	}
    }
}
