#!/usr/bin/expect

proc argv_check {} {
    global argv
    if {[llength $argv] != 1} {
	puts "needs ttyUSBx"
	exit 0
    }
}

proc ask_yes_no {msg} {
    puts "$msg (y/n) ?"
    set ans [gets stdin]
    if {$ans != "y"} {
	exit 0
    }
}

proc sw_change_mode {} {
    puts "********************"
    puts "Stop board Power"
    puts "********************"
    ask_yes_no "OK ?"

    puts "********************"
    puts "Change the Mode"
    message_sw_to_update_mode
    puts "********************"
    ask_yes_no "Are you ready ?"

    puts "********************"
    puts "Power ON the board"
    puts "********************"
    ask_yes_no "OK ?"
}

proc sw_change_back {} {
    puts "********************"
    puts "Change back the Mode"
    message_sw_to_normal_mode
    puts "********************"
    ask_yes_no "Are you ready ?"
}

proc upload_file {file} {
    #
    # read srec file
    #
    set f [open $file]
    set srec [split [read $f] "\n"]
    close $f

    #
    # send srec as ascii
    #
    set send_slow {10 .001}
    foreach s $srec {
	send -s "$s\n"
    }
}

proc file_check {lists} {
    set err 0

    #
    # it expects lists are
    #
    #	top,save,file
    #	top,save,file
    #	top,save,file
    #	...
    #
    foreach list $lists {
	set data [split $list ","]
	if {[llength $data] != 3} {
	    return
	}

	#
	# It assumes files are
	# located at pwd
	#
	set pwd  [format "%s" [pwd] ]
	set file [lindex $data 2]

	if { [ file exists "${pwd}/${file}" ] != 1 } {
	    puts "file not found at pwd: ${pwd}/${file}"
	    set err 1
	}
    }

    if {$err != 0} {
	exit 0
    }
}

proc run_main {lists} {
    #
    # it expects lists are
    #
    #	top,save,file
    #	top,save,file
    #	top,save,file
    #	...
    #
    foreach list $lists {

	#
	# list is
	#	top,save,file
	#
	set data [split $list ","]
	if {[llength $data] != 3} {
	    return
	}
	set top  [lindex $data 0]
	set save [lindex $data 1]
	set file [lindex $data 2]

	send "\r"

	expect {
	    ">" { send "xls2\r" }
	}

	xls2_talk_before_upload

	expect {
	    "Please Input : H'"    { send "$top\r" }
	}
	expect {
	    "Please Input : H'"    { send "$save\r" }
	}
	expect {
	    "please send !"
	}

	upload_file $file

	expect {
	    "Clear OK?(y/n)" { send "y" }
	}
	expect { ">" }
    }
}
