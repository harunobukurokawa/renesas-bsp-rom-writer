; SPDX-License-Identifier: GPL-2.0
;====================================
;
; Renesas StarterKit ROM Writer
;
;====================================
getdir top
dirname top top

;=============================
;
; SoC type and Files
;
;=============================
strdim soc 5
soc[0] = "H3    (S/N     0 - 2000)" ; WS1.1 is not supported
soc[1] = "H3 4G (S/N  2001 - 4500)"
soc[2] = "H3 8G (S/N 20001 - )"
soc[3] = "M3    (S/N all)"
soc[4] = "M3N   (S/N all)"

strdim soc_file 5
soc_file[0] = ""
soc_file[1] = "h3_4g"
soc_file[2] = "h3_8g"
soc_file[3] = "m3"
soc_file[4] = "m3n"

;=============================
;
; Yocto Versions
;
;=============================
strdim yocto 1
yocto[0] = "v5.1.0"

;=============================
;
; Ask Half-Auto or Fll-Auto
;
;=============================
strdim auto 2
auto[0] = "Half Auto - need dipswitch control"
auto[1] = "Full Auto - need mot file"

listbox "Auto Type Select" "Which Type ?" auto 1

; mot NULL  => Half Auto
; mot exist => Full Auto
mot = ""
if result=1 then
  sprintf2 mot "%s\AArch32_Flash_writer_SCIF_DUMMY_CERT_E6300400_ULCB.mot" top
  filesearch mot
  if result==0 then
    msg = "mot file not exist\nget it from Linux user"
    strspecial msg
    messagebox msg "mot error"
    end
  endif
endif

;=============================
;
; Ask SoC
;
;=============================
listbox "SoC Select" "Which SoC ?" soc 1

if result<0 then
  end
elseif result=0 then
  messagebox "H3 WS1.1 is not supported" "error"
  end
endif

load_soc = soc_file[result]

;=============================
;
; Ask Yocto
;
;=============================
listbox "Yocto Select" "Which Yocto ?" yocto

load_yocto = yocto[result]

;=============================
;
; Ask srec dir
;
;=============================
dirnamebox "Yocto dir ?"

if result!=1 end

dir = inputstr

;=============================
; Load settings
;=============================
sprintf2 setting "%s\yocto\%s\%s" top load_yocto load_soc

;--------
; create array
;--------
num_list = 6
num_sw   = 5

strdim list             num_list ; for address / srec
strdim dipswitch_update num_sw   ; for dipswitch
strdim dipswitch_normal num_sw   ; for dipswitch
include setting

;=============================
; file check
;=============================
error = ""
for i 0 num_list-1
  strsplit list[i] ","

  sprintf2 file "%s\%s" dir groupmatchstr3
  filesearch file
  if result!=1 then
    sprintf2 error "%s\n%s" error groupmatchstr3
  endif
next

strcompare error ""
if result!=0 then
  sprintf2 error "File not found\n\n%s" error
  strspecial error
  messagebox error "error"
  end
endif

;=============================
; run main
;=============================
setbaud 12  ; 115200

strcompare mot ""
if result=0 then
  call run_mode_sw
else
  call run_mode_cpld
endif

call run_main
end

;=============================
; Half-Auto mode
;=============================
: run_mode_sw
msg_before=""
msg_after=""
for i 0 num_sw-1
  strcompare dipswitch_update[i] ""
  if result!=0 sprintf2 msg_before "%s\n%s" msg_before dipswitch_update[i]

  strcompare dipswitch_normal[i] ""
  if result!=0 sprintf2 msg_after  "%s\n%s" msg_after  dipswitch_normal[i]
next

strspecial msg_before
strspecial msg_after

yesnobox "Board Power OFF ?" "Power Check"
if result!=1 end

yesnobox msg_before "SW Check"
if result!=1 end

yesnobox "Board Power ON ?" "Power Check"
if result!=1 end

yesnobox msg_after  "SW check"
if result!=1 end

return

;=============================
; Full-Auto mode
;=============================
: run_mode_cpld

yesnobox "Board Power ON ?" "Power Check"
if result!=1 end

sendln ""

wait "=>"
sendln "cpld write 0x00 0x802181fe"

wait "=>"
sendln "cpld write 0x80 0x01"

wait "please send !"
sendfile mot 1

return

;=============================
; Main run
;=============================
: run_main

for i 0 num_list-1
   strsplit list[i] ","

   sendln ""

   wait ">"
   sendln "xls2"

   wait "Select (1-3)>"
   sendln "3"

   wait "(Push Y key)"
   send 'Y'

   wait "(Push Y key)"
   send 'Y'

   wait "Please Input : H'"
   sendln groupmatchstr1

   wait "Please Input : H'"
   sendln groupmatchstr2

   wait "please send !"

   sprintf2 file "%s\%s" dir groupmatchstr3
   sendfile file 1

   wait "Clear OK?(y/n)"
   sendln "y"

   wait ">"
next
return
