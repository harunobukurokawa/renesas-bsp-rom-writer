; SPDX-License-Identifier: GPL-2.0
;====================================
;
; Renesas StarterKit ROM Writer
;
;====================================
setbaud 115200

;=============================
;
; Versions
;
;=============================
strdim versions 8
versions[0] = "yocto/5.5.0"
versions[1] = "yocto/5.1.0"
versions[2] = "yocto/4.1.0"
versions[3] = "yocto/3.21.0"
versions[4] = "android/11_1.1"
versions[5] = "android/11_1.0"
versions[6] = "android/10_2.0"
versions[7] = "android/10_1.2"

strdim list             num_list
strdim dipswitch_h_update num_dipswitch_h
strdim dipswitch_h_normal num_dipswitch_h

if num_dipswitch_a>0 then
  strdim dipswitch_a_update num_dipswitch_a
  strdim dipswitch_a_normal num_dipswitch_a
endif

call ask_mode
call ask_soc
call ask_ver
call ask_dir
call run_mode
messagebox "finished" "message"
exit

;=============================
;
; Ask Mode
;
;=============================
: ask_mode

; mot NULL  => Half Auto
; mot exist => Full Auto
mot = ""

strcompare auto_mode ""
if result=0 return

strdim auto 2
auto[0] = "use Dip-Switch"
auto[1] = "use Mot file"

listbox "Auto Type Select" "Which Type ?" auto 1
if result=0 return

strcompare auto_mode "starterkit"
if result=0 sprintf2 mot "%s\AArch32_Flash_writer_SCIF_DUMMY_CERT_E6300400_ULCB.mot" top

strcompare auto_mode "salvator"
if result=0 sprintf2 mot "%s\AArch64_Flash_writer_SCIF_DUMMY_CERT_E6300400_salvator-x.mot" top

filesearch mot
if result=0 then
  sprintf2 msg "%s\nmot file not exist\nget it from Linux user" mot
  strspecial msg
  messagebox msg "mot error"
  end
endif

return

;=============================
;
; Ask SoC
;
;=============================
: ask_soc

listbox "SoC Select" "Which SoC ?" soc

if result<0 then
  end
endif

load_soc = soc_file[result]

strlen load_soc
if result<=0 then
  messagebox "not supported board" "error"
  end
endif

return

;=============================
;
; Ask Version
;
;=============================
: ask_ver

listbox "Version Select" "Which Version ?" versions

strsplit versions[result] "/"

target = groupmatchstr1
sprintf2 ver  "%s:" groupmatchstr2
sprintf2 file "%s\%s\table" top target

fileopen fh file 0
while 1
  filereadln fh map
  if result break

  strscan map ver
  pos = result
  if pos!=0 then
    strlen ver
    strremove map 1 result
    break
  endif
endwhile
fileclose fh

return

;=============================
;
; Ask srec dir
;
;=============================
: ask_dir
dirnamebox "binary dir ?"

if result!=1 end

dir = inputstr

;
; Load settings
;
sprintf2 setting "%s\%s\%s\%s" top target map load_soc
include setting

;
; file check
;
error = ""
for i 0 num_list-1
  strsplit list[i] ","

  sprintf2 file "%s\%s" dir groupmatchstr3
  filesearch file
  if result!=1 then
    sprintf2 error "%s\n%s" error groupmatchstr3
  endif
next

strcompare error ""
if result!=0 then
  sprintf2 error "File not found\n\n%s" error
  strspecial error
  messagebox error "error"
  end
endif

return

;=============================
;
; Dip-Switch mode
;
;=============================
: run_mode_sw

for i 0 num_dipswitch_h-1
  strcompare dipswitch_h_update[i] ""
  if result!=0 sprintf2 sw_msg_for_qspi        "%s\n%s" sw_msg_for_qspi        dipswitch_h_update[i]

  strcompare dipswitch_h_normal[i] ""
  if result!=0 sprintf2 sw_msg_for_hyper_flash "%s\n%s" sw_msg_for_hyper_flash dipswitch_h_normal[i]
next

strspecial sw_msg_for_qspi
strspecial sw_msg_for_hyper_flash

yesnobox "Board Power OFF ?" "Power Check"
if result!=1 end

yesnobox sw_msg_for_qspi "SW Check"
if result!=1 end

yesnobox "Board Power ON ?" "Power Check"
if result!=1 end

yesnobox sw_msg_for_hyper_flash  "SW check"
if result!=1 end

call speed_up
call run_main
return

;=============================
;
; StarterKit mode
;
;=============================
: run_mode_starterkit

yesnobox "Board Power OFF ?" "Power Check"
if result!=1 end

yesnobox "Board Power ON ?" "Power Check"
if result!=1 end

; Ctrl-C
pause 1
sendln #3

wait "=>"
sendln ""

wait "=>"
sendln "cpld write 0x00 0x802181fe"

wait "=>"
sendln "cpld write 0x80 0x01"

wait "please send !"
sendfile mot 1

call speed_up
call run_main
return

;=============================
; Salvator Mode
;=============================
: run_mode_salvator

for i 0 num_dipswitch_a-1
  strcompare dipswitch_a_update[i] ""
  if result!=0 sprintf2 sw_msg_for_qspi        "%s\n%s" sw_msg_for_qspi        dipswitch_a_update[i]

  strcompare dipswitch_a_normal[i] ""
  if result!=0 sprintf2 sw_msg_for_hyper_flash "%s\n%s" sw_msg_for_hyper_flash dipswitch_a_normal[i]
next

strspecial sw_msg_for_qspi
strspecial sw_msg_for_hyper_flash

yesnobox "Board Power OFF ?" "Power Check"
if result!=1 end

yesnobox sw_msg_for_qspi "SW Check"
if result!=1 end

yesnobox "Board Power ON ?" "Power Check"
if result!=1 end

wait "please send !"
sendfile mot 1

call speed_up
call run_main

yesnobox sw_msg_for_hyper_flash  "SW check"
if result!=1 end

return

;=============================
;
; speed up
;
;=============================
: speed_up

timeout = 1

; avoid some noise (?)
sendln ""
wait ">"

sendln ""
wait ">"
sendln "sup"

msg1 = 'Change to 460.8Kbps baud rate setting of the SCIF. OK? (y/n)'
msg2 = 'Please change to 460.8Kbps baud rate setting of the terminal.'
msg3 = 'Please change to 921.6Kbps baud rate setting of the terminal.'
wait msg1 msg2 msg3

If result=1 then
  sendln 'y'
  wait 'Please change to 460.8Kbps baud rate setting of the terminal.'
  setbaud 460800
elseif result=2 then
  setbaud 460800
elseif result=3 then
  setbaud 921600
endif

timeout = 0
return

;=============================
;
; Main loop
;
;=============================
: run_main
for i 0 num_list-1
   strsplit list[i] ","

   if ask_in_main_loop=1 then
     yesnobox groupmatchstr3 "Run ?"
     if result!=1 continue
   endif

   sendln ""

   wait ">"
   sendln "xls2"

   wait "Select (1-3)>"
   sendln "3"

   wait "(Push Y key)"
   send 'Y'

   wait "(Push Y key)"
   send 'Y'

   wait "Please Input : H'"
   sendln groupmatchstr1

   wait "Please Input : H'"
   sendln groupmatchstr2

   wait "please send !"

   sprintf2 file "%s\%s" dir groupmatchstr3
   sendfile file 1

   wait "Clear OK?(y/n)"
   sendln "y"

   wait ">"
next
return

;=============================
;
; Run each Mode
;
;=============================
: run_mode

;
; SW mode
;
strcompare mot ""
if result=0 then
  call run_mode_sw
  return
endif

;
; CPLD mode
;
strcompare auto_mode "starterkit"
if result=0 then
  call run_mode_starterkit
  return
endif

;
; Salvator mode
;
strcompare auto_mode "salvator"
if result=0 then
  call run_mode_salvator
  return
endif

return
